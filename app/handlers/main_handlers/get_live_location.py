from aiogram import types, Router, F
from aiogram.fsm.context import FSMContext
from app.states.main_states import MainStates
from app.utils.logging import log_handler


get_live_location_router = Router()


@log_handler
@get_live_location_router.message(F.location)
async def get_live_location(message: types.Message, state: FSMContext):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Ä–µ–∞–ª—Ç–∞–π–º-–≥–µ–æ–ø–æ–∑–∏—Ü–∏—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    loc = message.location
    if loc.live_period:  # –ï—Å–ª–∏ –µ—Å—Ç—å live_period, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ —Å—Ç—Ä–∏–º
        await message.answer("‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢—ã –Ω–∞—á–∞–ª —Ç—Ä–∞–Ω—Å–ª–∏—Ä–æ–≤–∞—Ç—å live-–ª–æ–∫–∞—Ü–∏—é üö¥")
        await state.set_state(MainStates.get_live_location_menu)
    else:
        await message.answer(
            "‚ÑπÔ∏è –¢—ã –æ—Ç–ø—Ä–∞–≤–∏–ª —Ä–∞–∑–æ–≤—É—é —Ç–æ—á–∫—É - —ç—Ç–æ –Ω–µ —Å–æ–≤—Å–µ–º —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ :(\n"
            "–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ (–≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –≤—ã—à–µ)"
        )
